"""
Django settings for cfehome project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from cfehome.env import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("DJANGO_SECRET_KEY", default=None)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DJANGO_DEBUG", cast = bool, default=False)

ALLOWED_HOSTS = []
ALLOWED_HOST = config("ALLOWED_HOST", cast=str, default="")
if ALLOWED_HOST:
    ALLOWED_HOSTS.append(ALLOWED_HOST.strip())


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products',
    'purchases',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cfehome.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cfehome.context_processors.vendor_files'
            ],
        },
    },
]

WSGI_APPLICATION = 'cfehome.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'neondb',
        'USER': 'Nirmal-Adhikari-hub',
        'PASSWORD': 'ZzsOnPQIGk48',
        'HOST': 'ep-odd-king-51872204.ap-southeast-1.aws.neon.tech',
        'PORT': '5432',
    }
}

from .db import * # noqa



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# DEFAULT_FILE_STORAGE = 'storages.backends.azure_storage.AzureStorage'
# AZURE_ACCOUNT_NAME = 'cover6images6commerce'
# AZURE_ACCOUNT_KEY = 'pMn4g613Sy3LfIS3ZUbaM3b8PZhmzzIX3XNNICZrGxNmi/ve7XwEHLwFGBZRoKNe9kTp/b2C1kfJ+AStZAl/3Q=='
# AZURE_CONTAINER = 'cover-images-commerce'  # The container for public files
# AZURE_CUSTOM_DOMAIN = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'

# MEDIA_ROOT = 'media/'  # No local storage for media files
# STATIC_ROOT = 'static/'  # No local storage for static files
# PROTECTED_MEDIA_ROOT = 'protected/'  # No local storage for protected files



# settings.py

# Set the Azure Storage configuration
AZURE_ACCOUNT_NAME = config("AZURE_ACCOUNT_NAME")
AZURE_ACCOUNT_KEY = config("AZURE_ACCOUNT_KEY")
AZURE_CONTAINER = config("AZURE_CONTAINER")
AZURE_CONNECTION_STRING = config("AZURE_CONNECTION_STRING")
AZURE_CUSTOM_DOMAIN = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'

STATICFILES_DIRS = [BASE_DIR / 'static']
# STATIC_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{AZURE_CONTAINER}/static/'
STATICFILES_STORAGE = 'cfehome.custom_storage.custom_azure.AzureStaticStorage'
# MEDIA_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{AZURE_CONTAINER}/media/'
DEFAULT_FILE_STORAGE = 'storages.backends.azure_storage.AzureStorage'
PROTECTED_FILE_STORAGE = 'cfehome.custom_storage.custom_azure.AzureProtectedStorage'
# PROTECTED_MEDIA_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{AZURE_CONTAINER}/protected'


# STATICFILES_DIRS = [
#     BASE_DIR / 'static',
# ]

# # Optional: If you want to keep your protected assets in a separate container
# PROTECTED_AZURE_CONTAINER = 'protected_assets_container'

# Set the URL for media and static files
MEDIA_URL = f'https://{AZURE_ACCOUNT_NAME}.blob.core.windows.net/{AZURE_CONTAINER}/products/'
STATIC_URL = f'https://{AZURE_ACCOUNT_NAME}.blob.core.windows.net/{AZURE_CONTAINER}/static/'
PROTECTED_MEDIA_URL = f'https://{AZURE_ACCOUNT_NAME}.blob.core.windows.net/{AZURE_CONTAINER}/protected/'

# Optional: Set the storage class for protected assets
# PROTECTED_FILE_STORAGE = 'storages.backends.azure_storage.AzureStorage'



# import os
# STATIC_URL = 'static/'
# STATICFILES_DIRS = [BASE_DIR / 'static']
# STATIC_ROOT = BASE_DIR / "static"
# MEDIA_URL = 'media/'
# MEDIA_ROOT = BASE_DIR / "media"
# PROTECTED_MEDIA_ROOT = BASE_DIR / "protected"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
